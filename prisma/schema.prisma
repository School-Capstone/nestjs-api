generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(uuid())
  surname          String
  name             String
  email            String          @unique
  password         String
  avatar           String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  role             Role            @default(USER)
  writtenPosts     Post[]          @relation("WrittenPosts") // This is the custom relation between a user and the posts they have written (one-to-many)
  favouritePosts   Post[]          @relation("FavouritePosts")
  userPreference   UserPreference? @relation(fields: [userPreferenceId], references: [id]) // This is the optional relation between a user and their preferences (one-to-one)
  userPreferenceId String?         @unique
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  darkMode     Boolean
  user         User?
}

model Post {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  title          String
  averageRating  Float
  author         User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId       String
  favouritedBy   User?      @relation("FavouritePosts", fields: [favouritedById], references: [id])
  favouritedById String?
  categories     Category[] // This is the relation between a post and the categories it belongs to (many-to-many)
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[] // This is the relation between a category and the posts it belongs to (many-to-many)
}

enum Role {
  USER
  ADMIN
}
